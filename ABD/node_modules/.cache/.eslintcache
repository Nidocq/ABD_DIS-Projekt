[{"C:\\Users\\mahmo\\ABD_DIS-Projekt\\ABD\\src\\index.tsx":"1","C:\\Users\\mahmo\\ABD_DIS-Projekt\\ABD\\src\\App.tsx":"2","C:\\Users\\mahmo\\ABD_DIS-Projekt\\ABD\\src\\HomeScreen\\HomeScreen.tsx":"3","C:\\Users\\mahmo\\ABD_DIS-Projekt\\ABD\\src\\CategorySuggestion\\CategorySuggest.tsx":"4","C:\\Users\\mahmo\\ABD_DIS-Projekt\\ABD\\src\\Navbar\\Navbar.tsx":"5","C:\\Users\\mahmo\\ABD_DIS-Projekt\\ABD\\src\\ItemView\\ItemView.tsx":"6","C:\\Users\\mahmo\\ABD_DIS-Projekt\\ABD\\src\\CategorySuggestion\\Suggestion.tsx":"7","C:\\Users\\mahmo\\ABD_DIS-Projekt\\ABD\\src\\Item\\Item.tsx":"8"},{"size":501,"mtime":1684338542224,"results":"9","hashOfConfig":"10"},{"size":225,"mtime":1684338542217,"results":"11","hashOfConfig":"10"},{"size":579,"mtime":1684413092040,"results":"12","hashOfConfig":"10"},{"size":1525,"mtime":1684415704860,"results":"13","hashOfConfig":"10"},{"size":942,"mtime":1684416840641,"results":"14","hashOfConfig":"10"},{"size":2688,"mtime":1684412801711,"results":"15","hashOfConfig":"10"},{"size":197,"mtime":1684415727325,"results":"16","hashOfConfig":"10"},{"size":2140,"mtime":1684418511462,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1fvozdg",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"21"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\mahmo\\ABD_DIS-Projekt\\ABD\\src\\index.tsx",[],[],[],"C:\\Users\\mahmo\\ABD_DIS-Projekt\\ABD\\src\\App.tsx",[],[],"C:\\Users\\mahmo\\ABD_DIS-Projekt\\ABD\\src\\HomeScreen\\HomeScreen.tsx",[],[],"C:\\Users\\mahmo\\ABD_DIS-Projekt\\ABD\\src\\CategorySuggestion\\CategorySuggest.tsx",["44","45","46"],[],"C:\\Users\\mahmo\\ABD_DIS-Projekt\\ABD\\src\\Navbar\\Navbar.tsx",[],[],"C:\\Users\\mahmo\\ABD_DIS-Projekt\\ABD\\src\\ItemView\\ItemView.tsx",["47"],[],"import React from \"react\";\r\nimport Item, { ItemProps } from \"../Item/Item\";\r\nimport { IconName } from \"@fortawesome/free-solid-svg-icons\";\r\nimport './ItemView.css';\r\n\r\n\r\n// TODO: This should idealy be a json file\r\nconst itemArray:ItemProps[] = [{\r\n    id: 1,\r\n    toggleLike: (index: number) => {},\r\n    isLiked: false,\r\n    img:'https://www.tutorialspoint.com/assets/questions/media/426142-1668760872.png',\r\n    title:'This is a title',\r\n    owner:'Hanzomain', \r\n    description:'Hanzo is a strong guy',\r\n    likes:42,\r\n},\r\n{\r\n    id: 1,\r\n    toggleLike: (index: number) => {},\r\n    isLiked: false,\r\n    img:'https://imgv3.fotor.com/images/blog-richtext-image/take-a-picture-with-camera.png',\r\n    title:'This is a title',\r\n    owner:'Hanzomain',\r\n    description:'can you feel the love?',\r\n    likes:42,\r\n},\r\n{\r\n    id: 1,\r\n    toggleLike: (index: number) => {},\r\n    isLiked: true,\r\n    img:'https://d.newsweek.com/en/full/520858/supermoon-moon-smartphone-photo-picture.jpg?w=1600&h=1600&q=88&f=bb45f0cd0324ae5e04827f684a9da7e8',\r\n    title:'This is a title',\r\n    owner:'Hanzomain',\r\n    description:'never gonna give you up',\r\n    likes:42,\r\n},\r\n{\r\n    id: 1,\r\n    toggleLike: (index: number) => {},\r\n    isLiked: true,\r\n    img:'https://sb.kaleidousercontent.com/67418/3840x2200/40b6488625/individuals-org.png',\r\n    title:'This is a title',\r\n    owner:'Hanzomain',\r\n    description:'Dancing queeeeeeeen',\r\n    likes:42,\r\n}   \r\n];\r\n\r\n\r\nfunction ItemView() {\r\n    // TODO: This should be fetched from database\r\n    const [items, setItems] = React.useState(itemArray);\r\n\r\n    const toggleLike = (index: number) => {\r\n        setItems((prevItems) => {\r\n            // Create a copy of the array\r\n            let updatedItems = [...prevItems]; \r\n\r\n            // Update the specific item\r\n            // Assuming the item has an 'isLiked' property\r\n            updatedItems[index] = { ...updatedItems[index], \r\n                                    isLiked: !updatedItems[index].isLiked };\r\n            return updatedItems; // Set the updated array as the new state\r\n          });\r\n    }\r\n\r\n    return ( <div className=\"item-view-container\">\r\n        {items.map((item, index) => {\r\n            return <Item \r\n                        key={index}\r\n                        id={index}\r\n                        toggleLike={toggleLike}\r\n                        isLiked={item.isLiked}\r\n                        img={item.img}\r\n                        title={item.title}\r\n                        owner={item.owner}\r\n                        description={item.description}\r\n                        likes={item.likes}\r\n                    />\r\n        })}\r\n    </div> );\r\n}\r\n\r\nexport default ItemView;","C:\\Users\\mahmo\\ABD_DIS-Projekt\\ABD\\src\\CategorySuggestion\\Suggestion.tsx",["48"],[],"C:\\Users\\mahmo\\ABD_DIS-Projekt\\ABD\\src\\Item\\Item.tsx",["49","50","51","52"],[],{"ruleId":"53","severity":1,"message":"54","line":4,"column":7,"nodeType":"55","messageId":"56","endLine":4,"endColumn":29},{"ruleId":"53","severity":1,"message":"57","line":51,"column":7,"nodeType":"55","messageId":"56","endLine":51,"endColumn":23},{"ruleId":"53","severity":1,"message":"58","line":55,"column":7,"nodeType":"55","messageId":"56","endLine":55,"endColumn":24},{"ruleId":"53","severity":1,"message":"59","line":3,"column":10,"nodeType":"55","messageId":"56","endLine":3,"endColumn":18},{"ruleId":"60","severity":1,"message":"61","line":7,"column":9,"nodeType":"62","endLine":7,"endColumn":36},{"ruleId":"63","severity":1,"message":"64","line":19,"column":13,"nodeType":"62","endLine":22,"endColumn":15},{"ruleId":"63","severity":1,"message":"64","line":29,"column":25,"nodeType":"62","endLine":32,"endColumn":27},{"ruleId":"63","severity":1,"message":"64","line":44,"column":25,"nodeType":"62","endLine":48,"endColumn":27},{"ruleId":"63","severity":1,"message":"64","line":50,"column":25,"nodeType":"62","endLine":54,"endColumn":27},"@typescript-eslint/no-unused-vars","'getCategorySuggestions' is assigned a value but never used.","Identifier","unusedVar","'handleGetOnClick' is assigned a value but never used.","'handlePostOnClick' is assigned a value but never used.","'IconName' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]