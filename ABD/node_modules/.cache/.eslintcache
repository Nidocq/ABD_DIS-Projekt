[{"/Users/liema/Code/React/ABD/ABD/src/index.tsx":"1","/Users/liema/Code/React/ABD/ABD/src/App.tsx":"2","/Users/liema/Code/React/ABD/ABD/src/HomeScreen/HomeScreen.tsx":"3","/Users/liema/Code/React/ABD/ABD/src/ItemView/ItemView.tsx":"4","/Users/liema/Code/React/ABD/ABD/src/Navbar/Navbar.tsx":"5","/Users/liema/Code/React/ABD/ABD/src/Item/Item.tsx":"6","/Users/liema/Code/React/ABD/ABD/src/CategorySuggestion/CategorySuggest.tsx":"7","/Users/liema/Code/React/ABD/ABD/src/CategorySuggestion/Suggestion.tsx":"8"},{"size":485,"mtime":1684243535018,"results":"9","hashOfConfig":"10"},{"size":212,"mtime":1684249477647,"results":"11","hashOfConfig":"10"},{"size":536,"mtime":1684409855656,"results":"12","hashOfConfig":"10"},{"size":2369,"mtime":1684410785433,"results":"13","hashOfConfig":"10"},{"size":970,"mtime":1684406223587,"results":"14","hashOfConfig":"10"},{"size":1089,"mtime":1684410537541,"results":"15","hashOfConfig":"10"},{"size":1563,"mtime":1684409759260,"results":"16","hashOfConfig":"10"},{"size":189,"mtime":1684256565129,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"kdafs0",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/Users/liema/Code/React/ABD/ABD/src/index.tsx",[],[],[],"/Users/liema/Code/React/ABD/ABD/src/App.tsx",[],[],"/Users/liema/Code/React/ABD/ABD/src/HomeScreen/HomeScreen.tsx",[],[],"/Users/liema/Code/React/ABD/ABD/src/ItemView/ItemView.tsx",["44"],[],"/Users/liema/Code/React/ABD/ABD/src/Navbar/Navbar.tsx",["45"],[],"import './Navbar.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { icon } from '@fortawesome/fontawesome-svg-core/import.macro'\n\nexport interface NavbarItems {\n    displayText: string;\n    // TODO: This should idealy be Url type\n    src: string;\n}\n\n// const NavbarItems : NavbarItems[] = [\n//     {\n//         displayText: \"Explore\",\n//         src: \"./index.html\"\n//     },\n//     {\n//         displayText: \"Create\",\n//         //TODO: MISSING\n//         src: \"\"\n//     }\n// ]\n\nfunction Navbar() {\n    return ( \n        <div className='wrapper'>\n                <FontAwesomeIcon \n                    onClick={() => alert(\"hello world\")}\n                    icon={icon({name: 'user'})} \n                 />\n                <a href=\"./index.html\">Explore</a>\n                <a href=\"\">Create</a>\n                <FontAwesomeIcon \n                    icon={icon({name: 'user'})}\n                />\n        </div> );\n}\n\nexport default Navbar;","/Users/liema/Code/React/ABD/ABD/src/Item/Item.tsx",["46","47","48"],[],"/Users/liema/Code/React/ABD/ABD/src/CategorySuggestion/CategorySuggest.tsx",["49"],[],"/Users/liema/Code/React/ABD/ABD/src/CategorySuggestion/Suggestion.tsx",[],[],{"ruleId":"50","severity":1,"message":"51","line":3,"column":10,"nodeType":"52","messageId":"53","endLine":3,"endColumn":18},{"ruleId":"54","severity":1,"message":"55","line":31,"column":17,"nodeType":"56","endLine":31,"endColumn":28},{"ruleId":"57","severity":1,"message":"58","line":17,"column":13,"nodeType":"56","endLine":20,"endColumn":15},{"ruleId":"57","severity":1,"message":"58","line":26,"column":21,"nodeType":"56","endLine":26,"endColumn":144},{"ruleId":"57","severity":1,"message":"58","line":28,"column":21,"nodeType":"56","endLine":28,"endColumn":144},{"ruleId":"50","severity":1,"message":"59","line":4,"column":7,"nodeType":"52","messageId":"53","endLine":4,"endColumn":29},"@typescript-eslint/no-unused-vars","'IconName' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'getCategorySuggestions' is assigned a value but never used."]