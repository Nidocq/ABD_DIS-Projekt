{"ast":null,"code":"var _jsxFileName = \"/Users/liema/Code/React/ABD/ABD/src/CategorySuggestion/CategorySuggest.tsx\";\nimport './CategorySuggest.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getCategorySuggestions = async text => {};\nconst SuggestionItems = [{\n  TextDisplay: \"All\"\n}, {\n  TextDisplay: \"Art\"\n}, {\n  TextDisplay: \"Photography\"\n}, {\n  TextDisplay: \"Music\"\n}, {\n  TextDisplay: \"Sport\"\n}];\nconst getItems = () => {\n  fetch('http://localhost:3001').then(response => response.json()).then(data => console.log(data));\n};\nconst handleOnClick = () => {\n  getItems();\n};\nfunction createItem() {\n  let name = prompt('Enter merchant name');\n  let email = prompt('Enter merchant email');\n  fetch('http://localhost:3001/Items', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      email\n    })\n  }).then(response => {\n    return response.text();\n  }).then(data => {\n    alert(data);\n    getItems();\n  });\n}\nfunction CategorySuggest() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"suggestWrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOnClick,\n      children: \"GET\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => createItem(),\n      children: \"CREATE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), SuggestionItems.map(item => {\n      return /*#__PURE__*/_jsxDEV(Suggestion, {\n        ...item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 53\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_c = CategorySuggest;\nexport default CategorySuggest;\nvar _c;\n$RefreshReg$(_c, \"CategorySuggest\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","getCategorySuggestions","text","SuggestionItems","TextDisplay","getItems","fetch","then","response","json","data","console","log","handleOnClick","createItem","name","prompt","email","method","headers","body","JSON","stringify","alert","CategorySuggest","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","item","Suggestion","_c","$RefreshReg$"],"sources":["/Users/liema/Code/React/ABD/ABD/src/CategorySuggestion/CategorySuggest.tsx"],"sourcesContent":["import './CategorySuggest.css';\nimport { CategoryItem } from './Suggestion';\n\nconst getCategorySuggestions = async (text: string) : Promise<void> => {\n}\n\nconst SuggestionItems : CategoryItem[]= [\n    {\n        TextDisplay: \"All\"\n    },\n    {\n        TextDisplay: \"Art\"\n    },\n    {\n        TextDisplay: \"Photography\"\n    },\n    {\n        TextDisplay: \"Music\"\n    },\n    {\n        TextDisplay: \"Sport\"\n    }\n]\n\nconst getItems = () => {\n    fetch('http://localhost:3001')\n    .then(response => response.json())\n    .then(data => console.log(data));\n} \n\nconst handleOnClick = () => {\n    getItems();\n}\n\n\nfunction createItem() {\n    let name = prompt('Enter merchant name');\n    let email = prompt('Enter merchant email');\n    fetch('http://localhost:3001/Items', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({name, email}),\n    })\n      .then(response => {\n        return response.text();\n      })\n      .then(data => {\n        alert(data);\n        getItems();\n      });\n  }\n\nfunction CategorySuggest() {\n\n    return (\n        <div className=\"suggestWrapper\">\n            <button onClick={handleOnClick}>GET</button>\n            <button onClick={() => createItem()}>CREATE</button>\n            {SuggestionItems.map((item) => { return <Suggestion {...item} /> }) }  \n        </div>\n    )\n}\n\nexport default CategorySuggest;"],"mappings":";AAAA,OAAO,uBAAuB;AAAC,SAAAA,MAAA,IAAAC,OAAA;AAG/B,MAAMC,sBAAsB,GAAG,MAAOC,IAAY,IAAqB,CACvE,CAAC;AAED,MAAMC,eAAgC,GAAE,CACpC;EACIC,WAAW,EAAE;AACjB,CAAC,EACD;EACIA,WAAW,EAAE;AACjB,CAAC,EACD;EACIA,WAAW,EAAE;AACjB,CAAC,EACD;EACIA,WAAW,EAAE;AACjB,CAAC,EACD;EACIA,WAAW,EAAE;AACjB,CAAC,CACJ;AAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnBC,KAAK,CAAC,uBAAuB,CAAC,CAC7BC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC;AACpC,CAAC;AAED,MAAMG,aAAa,GAAGA,CAAA,KAAM;EACxBR,QAAQ,CAAC,CAAC;AACd,CAAC;AAGD,SAASS,UAAUA,CAAA,EAAG;EAClB,IAAIC,IAAI,GAAGC,MAAM,CAAC,qBAAqB,CAAC;EACxC,IAAIC,KAAK,GAAGD,MAAM,CAAC,sBAAsB,CAAC;EAC1CV,KAAK,CAAC,6BAA6B,EAAE;IACnCY,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACP,IAAI;MAAEE;IAAK,CAAC;EACpC,CAAC,CAAC,CACCV,IAAI,CAACC,QAAQ,IAAI;IAChB,OAAOA,QAAQ,CAACN,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,CACDK,IAAI,CAACG,IAAI,IAAI;IACZa,KAAK,CAACb,IAAI,CAAC;IACXL,QAAQ,CAAC,CAAC;EACZ,CAAC,CAAC;AACN;AAEF,SAASmB,eAAeA,CAAA,EAAG;EAEvB,oBACIxB,OAAA;IAAKyB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3B1B,OAAA;MAAQ2B,OAAO,EAAEd,aAAc;MAAAa,QAAA,EAAC;IAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5C/B,OAAA;MAAQ2B,OAAO,EAAEA,CAAA,KAAMb,UAAU,CAAC,CAAE;MAAAY,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACnD5B,eAAe,CAAC6B,GAAG,CAAEC,IAAI,IAAK;MAAE,oBAAOjC,OAAA,CAACkC,UAAU;QAAA,GAAKD;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAC,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEd;AAACI,EAAA,GATQX,eAAe;AAWxB,eAAeA,eAAe;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}